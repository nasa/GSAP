language: cpp

# Use reasonable compiler versions
matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - lcov
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - COMPENV="gcc"
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - lcov
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        - COMPENV="clang"
    - os: osx
      compiler: clang
      env:
        - MATRIX_EVAL=""
        - COMPENV="clang"
    - os: osx
      env:
        - MATRIX_EVAL="GENERATOR='-G Xcode'"
        - COMPENV=""

before_install:
    - eval "${MATRIX_EVAL}"

script:
  - set OPEN_MP_NUM_THREADS 4
  - mkdir build
  - mkdir bin
  - mkdir coverage
  - mkdir -p bin/testresults
  - pushd build
  - cmake -DCoverage=ON .. $GENERATOR
  - cmake --build . --target install
  - popd
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$COMPENV" == "gcc" ]; then
    pushd coverage;
    lcov -b ../Test/ -c -q -i -d ../build/CMakeFiles/gsap.dir/ -o .coverage.initial;
    popd;
    fi
  - pushd bin
  - ./gsapTests
  - ./commCollectionTests
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$COMPENV" == "gcc" ]; then
    popd;
    pushd coverage;
    lcov -b ../ -c -q -d ../build/CMakeFiles/gsap.dir/ -o .coverage.run;
    lcov -a .coverage.initial -a .coverage.run -o .coverage.total;
    lcov -r .coverage.total 'usr/include/c++/*' -o .coverage.filtered;
    popd;
    fi

